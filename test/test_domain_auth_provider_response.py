# coding: utf-8

"""
    Corellium API

    REST API to manage your virtual devices.  # noqa: E501

    The version of the OpenAPI document: 7.3.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import corellium_api
from corellium_api.models.domain_auth_provider_response import DomainAuthProviderResponse  # noqa: E501
from corellium_api.rest import ApiException

class TestDomainAuthProviderResponse(unittest.TestCase):
    """DomainAuthProviderResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DomainAuthProviderResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = corellium_api.models.domain_auth_provider_response.DomainAuthProviderResponse()  # noqa: E501
        if include_optional :
            return DomainAuthProviderResponse(
                identifier = '', 
                id = '', 
                provider_type = '', 
                provider = '', 
                label = '', 
                name = '', 
                authorization_url = '', 
                default = True, 
                enabled = True, 
                config = corellium_api.models.open_id_config.OpenIDConfig(
                    discovery_url = '', 
                    client_id = '', 
                    client_secret = '', 
                    invited_only = True, ), 
                created_by = '', 
                created_at = '', 
                updated_at = ''
            )
        else :
            return DomainAuthProviderResponse(
                identifier = '',
                provider_type = '',
                label = '',
                default = True,
                enabled = True,
                created_at = '',
                updated_at = '',
        )

    def testDomainAuthProviderResponse(self):
        """Test DomainAuthProviderResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
