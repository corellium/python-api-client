# coding: utf-8

"""
    Corellium API

    REST API to manage your virtual devices.  # noqa: E501

    The version of the OpenAPI document: 7.3.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import corellium_api
from corellium_api.models.config_response import ConfigResponse  # noqa: E501
from corellium_api.rest import ApiException

class TestConfigResponse(unittest.TestCase):
    """ConfigResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ConfigResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = corellium_api.models.config_response.ConfigResponse()  # noqa: E501
        if include_optional :
            return ConfigResponse(
                on_site = True, 
                show_domain_settings = True, 
                version = '', 
                invalid_build = True, 
                sep_sim = True, 
                installer_available = True, 
                invoiced_publishable_key = '', 
                stripe_public_key = '', 
                intercom_id = '', 
                aux_webhook = '', 
                gtm_id = '', 
                zapier_feedback_webhook = '', 
                zapier_bugs_webhook = '', 
                billing_backend = '', 
                maintenance = None, 
                logging = corellium_api.models.logging.Logging(
                    development = True, 
                    throw_warnings = True, ), 
                cloud_admin = '', 
                files_admin = '', 
                cloud_domain = '', 
                billing_domain = '', 
                app_domain = '', 
                max_network_monitor_file_size = '', 
                enable_firmware_image_upload = True, 
                auth_providers = [
                    corellium_api.models.auth_provider.AuthProvider(
                        name = '', 
                        identifier = '', 
                        provider_type = '', 
                        default = True, 
                        label = '', 
                        enabled = True, 
                        authorization_url = '', 
                        id = '', 
                        provider = '', )
                    ], 
                snapshot_limit = 1.337, 
                max_kernel_size = 1.337, 
                max_ramdisk_size = 1.337, 
                charm_sdk = '', 
                trial = corellium_api.models.trial.Trial(
                    default_duration = 1.337, 
                    default_hours = 1.337, 
                    default_devices = 1.337, 
                    default_cores = 1.337, ), 
                sentry_url = '', 
                domain_authentication_providers = True, 
                default_ssid = ''
            )
        else :
            return ConfigResponse(
        )

    def testConfigResponse(self):
        """Test ConfigResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
