# coding: utf-8

"""
    Corellium API

    REST API to manage your virtual devices.  # noqa: E501

    The version of the OpenAPI document: 7.3.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import corellium_api
from corellium_api.models.activity_list import ActivityList  # noqa: E501
from corellium_api.rest import ApiException

class TestActivityList(unittest.TestCase):
    """ActivityList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ActivityList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = corellium_api.models.activity_list.ActivityList()  # noqa: E501
        if include_optional :
            return ActivityList(
                data = [
                    corellium_api.models.activity.Activity(
                        identifier = '', 
                        domain = '', 
                        actor = '', 
                        event = '', 
                        outcome = '', 
                        metadata = corellium_api.models.metadata.metadata(), 
                        corellium_version = '', 
                        project_id = '', 
                        instance_id = '', 
                        created_at = '', 
                        updated_at = '', )
                    ], 
                pagination = corellium_api.models.pagination.Pagination(
                    current_page = 1.337, 
                    total_pages = 1.337, 
                    total_items = 1.337, 
                    items_per_page = 1.337, )
            )
        else :
            return ActivityList(
        )

    def testActivityList(self):
        """Test ActivityList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
