# coding: utf-8

"""
    Corellium API

    REST API to manage your virtual devices.  # noqa: E501

    The version of the OpenAPI document: 7.3.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import corellium_api
from corellium_api.models.domain_auth_provider_request import DomainAuthProviderRequest  # noqa: E501
from corellium_api.rest import ApiException

class TestDomainAuthProviderRequest(unittest.TestCase):
    """DomainAuthProviderRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DomainAuthProviderRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = corellium_api.models.domain_auth_provider_request.DomainAuthProviderRequest()  # noqa: E501
        if include_optional :
            return DomainAuthProviderRequest(
                provider_type = '', 
                enabled = True, 
                label = '', 
                config = corellium_api.models.open_id_config.OpenIDConfig(
                    discovery_url = '', 
                    client_id = '', 
                    client_secret = '', 
                    invited_only = True, )
            )
        else :
            return DomainAuthProviderRequest(
                provider_type = '',
                enabled = True,
        )

    def testDomainAuthProviderRequest(self):
        """Test DomainAuthProviderRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
