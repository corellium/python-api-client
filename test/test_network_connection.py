# coding: utf-8

"""
    Corellium API

    REST API to manage your virtual devices.  # noqa: E501

    The version of the OpenAPI document: 7.3.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import corellium_api
from corellium_api.models.network_connection import NetworkConnection  # noqa: E501
from corellium_api.rest import ApiException

class TestNetworkConnection(unittest.TestCase):
    """NetworkConnection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test NetworkConnection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = corellium_api.models.network_connection.NetworkConnection()  # noqa: E501
        if include_optional :
            return NetworkConnection(
                identifier = '', 
                provider = '', 
                name = '', 
                config = corellium_api.models.config.config(), 
                projects = [
                    corellium_api.models.project_network_state.ProjectNetworkState(
                        state = '', 
                        details = corellium_api.models.details.details(), )
                    ], 
                created_at = '', 
                updated_at = '', 
                created_by = '', 
                updated_by = ''
            )
        else :
            return NetworkConnection(
                identifier = '',
                provider = '',
                name = '',
                config = corellium_api.models.config.config(),
                created_at = '',
                updated_at = '',
                created_by = '',
                updated_by = '',
        )

    def testNetworkConnection(self):
        """Test NetworkConnection"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
